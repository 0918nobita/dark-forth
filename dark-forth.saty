% ブロックテキスト { ... }

% インラインテキスト < ... > (文書全体を囲むものは例外的に '< ... > )

% read-inline : context -> inline-text -> inline-boxes
% read-inline ctx it で，テキスト処理文脈 ctx の保持するフォントや
% 文字サイズなどの情報をもとにインラインテキスト it をインラインボックス列へと変換する

% script-guard : script -> inline-boxes -> inline-boxes
% スペーシングに関して，インラインボックスを特定の文字体系のテキストに擬態させる

% (++) : inline-boxes -> inline-boxes -> inline-boxes
% インラインボックス同士を結合させる

% set-dominant-narrow-script : script -> context -> context
% 第1引数に与えられた文字体系を狭い寡占的な文字体系に設定する

% type script = HanIdeographic | Kana | Latin | OtherScript

% type page = A0Paper | ... | A5Paper | USLetter | USLegal | UserDefinedPaper of length * length

% page-break :
%   page
%   -> ((| page-number: int |) -> (| text-height: int |))
%   -> ((| page-number: int |)
%     -> (| header-content: block-boxes
%       ; header-origin: point
%       ; footer-content: block-boxes
%       ; footer-origin: point
%       |))
%   -> block-boxes
%   -> document

% block-boxes とは？

% embed-math とは？

% command とは？

% get-initial-cotext とは？

@require: itemize
@require: code

let-inline ctx \math m =
  script-guard Latin (embed-math ctx m)

let document bt =
  let ctx =
      get-initial-context 440pt (command \math)
      |> set-dominant-wide-script Latin
      |> set-font Kana (`ipaexm`, 1., 0.)
  in
  page-break
    A5Paper
    (fun _ ->
      (| text-origin = (18mm, 20mm)
      ; text-height = 630pt
      |))
    (fun _ ->
      (| header-origin = (0pt, 0pt)
      ; header-content = block-nil
      ; footer-origin = (0pt, 0pt)
      ; footer-content = block-nil
      |))
    (read-block ctx bt)

let-inline ctx \optimus it =
  let new-ctx = ctx |> set-font Latin (`optimus`, 1., 0.) in
  read-inline new-ctx it

let-block ctx +p it =
  line-break true true ctx (read-inline ctx it ++ inline-fil)
in
document '<
  +p{\optimus{DARK FORTH}}
  +p{\code(`." HELLO WORLD"`); と入力して Enter キーを押してください．}
>
